{
    // 该配置项主要用于指示此.eslintrc文件是ESlint在项目内使用的根级别文件，并且ESLint不应该在该目录之外搜索配置文件
    "root": true,

    // 默认情况下，ESlint使用其内置的Espree解析器，该解析器与标准的JavaScript运行时和版本兼容，而我们需要将ts代码解析为eslint兼容的AST，
    // 所以此处我们使用@typescript-eslint/parser
    "parser": "@typescript-eslint/parser",

    // 该配置项告诉eslint我们拓展了哪些置顶的配置集
    "extends": [
        // 该配置集是ESlint内置的推荐，它启用一组小的、合理的规则，用于检查众所周知的最佳实践
        "eslint:recommended",
        // 该配置集是typescript-eslint的推荐，它与eslint:recommanded相似，但它启用了特定于ts的规则
        "plugin:@typescript-eslint/recommended",
        // 该配置集禁用eslint-recommanded配置集中已经由typescript处理的规则，防止eslint和typescript之间的冲突
        "plugin:@typescript-eslint/eslint-recommended",

        // 即eslint-config-prettier，关闭所有可能干扰prettier规则的ESlint规则，确保将其放在最后，这样它有机会覆盖其它配置集
        "prettier"
    ],

    // 该配置项指示要加载的插件
    "plugins": [
        // 这里的插件使得我们能在存储库中使用typescript-eslint包定义的规则集
        "@typescript-eslint",
        // 即eslint-plugin-prettier，将prettier规则转换为ESlint规则
        "prettier"
    ],

    "rules": {
        // 打开prettier插件提供的规则，该插件从ESlint内运行prettier
        "prettier/prettier": "error",

        // 关闭这两个关闭，这两个规则和prettier插件一起使用会出现问题
        "arrow-body-style": "off",
        "prefer-arrow-callback": "off"
    }
}
